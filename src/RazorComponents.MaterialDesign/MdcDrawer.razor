@inject IJSRuntime jsRuntime

<aside @ref="drawerElem" class="@CssClass" id="app-drawer">
    <div class="mdc-drawer__content">
        <CascadingValue Value="@this">
            @ChildContent
        </CascadingValue>
    </div>
</aside>

@functions {
    ElementRef drawerElem;
    bool isOpen;
    string CssClass => $"mdc-drawer mdc-drawer--dismissible { (StartOpen ? "mdc-drawer--open" : "") }";

    [Parameter] RenderFragment ChildContent { get; set; }
    [Parameter] bool StartOpen { get; set; }
    [Parameter] bool CloseOnNavigate { get; set; } = true;

    protected override void OnInit()
    {
        isOpen = StartOpen;
    }

    public void Toggle()
        => Toggle(!isOpen);

    public void Toggle(bool open)
    {
        isOpen = open;
        StateHasChanged();
    }

    public void NotifyNavigation()
    {
        if (CloseOnNavigate)
        {
            Toggle(false);
        }
    }

    protected override Task OnAfterRenderAsync()
        => jsRuntime.InvokeAsync<object>(
            "BlazorMaterial.drawer.toggle",
            drawerElem,
            isOpen);
}
